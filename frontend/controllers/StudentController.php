<?php
/**
 * Created by PhpStorm.
 * User: jiangminjie
 * Date: 2018/4/18
 * Time: 下午1:09
 */

namespace frontend\controllers;


use common\models\Student;
use common\util\Constants;
use yii\web\Controller;

class StudentController extends Controller
{
    public function actionIndex()
    {
        $get = \Yii::$app->request->get();
        $dept = isset($get['dept']) ? $get['dept'] : "";
        $pro = isset($get['pro']) ? $get['pro'] : "";
        $class = isset($get['class']) ? $get['class'] : "";
        $name = isset($get['name']) ? $get['name'] : "";
        $code = isset($get['code']) ? $get['code'] : "";
        $dormnumber = isset($get['dormnumber']) ? $get['dormnumber'] : "";
        return $this->render('index',[
            'dept'=>$dept,
            'pro'=>$pro,
            'class'=>$class,
            'name'=>$name,
            'code'=>$code,
            'dormnumber'=>$dormnumber,
        ]);
    }

    public function actionTable()
    {
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $page = \Yii::$app->request->get('page')-1;
        $num = \Yii::$app->request->get('limit');
        $name = \Yii::$app->request->get('name');
        $code = \Yii::$app->request->get('code');
        $dept = \Yii::$app->request->get('dept');
        $pro = \Yii::$app->request->get('pro');
        $class = \Yii::$app->request->get('class');
        $building_code = \Yii::$app->request->get('building');


        $query = Student::find();
        $query->andFilterWhere([
            'like','student_name',$name,
        ]);
        $query->andFilterWhere([
            'like','student_class',$class
        ]);
        $query->andFilterWhere([
            'student_code'=>$code,
            'institude_name'=>$dept
        ]);

        $students = $query->offset($num*$page)->limit($num)->all();
        $count = $query->count();

        return [
            'code'=>0,
            'msg'=>'',
            'count'=>$count,
            'data'=>$students
        ];

//        return [
//            'code'=>0,
//            'msg'=>'',
//            'count'=>$count,
//            'data'=>[
//                [
//                    'id'=>1,
//                    'checkstatus'=>'未审核',
//                    'code'=>'学号',
//                    'name'=>'姓名',
//                    'status'=>'已提交',
//                    'dept'=>'数理系',
//                    'pro'=>'计科',
//                    'class'=>'计科N142',
//                    'classify'=>'职务',
//                    'sex'=>'女',
//                    'idcode'=>'330304199008134321',
//                    'ethnicity'=>'汉族',
//                    'contacts'=>'15757331245',
//                    'duanhao'=>'661245',
//                    'jiguan'=>'温州',
//                    'shengyuandi'=>'温州',
//                    'religious'=>'无',
//                    'politicalstatus'=>'共青团员',
//                    'addr'=>'浙江省嘉兴市南湖区',
//                    'guardian'=>'监护人',
//                    'guardiancontacts'=>'监护人联系方式',
//                    'building'=>'楼宇',
//                    'dormnumber'=>'学生寝室号',
//                    'bednumber'=>'床号',
//                    'remark'=>'备注',
//                ]
//            ]
//        ];
    }

    public function actionTest()
    {
        return $this->render('test');
        return parent::actions(); // TODO: Change the autogenerated stub
    }

    public function actionImport()
    {
        ignore_user_abort(true);
        set_time_limit(0);
        \Yii::$app->response->format = \yii\web\Response::FORMAT_JSON;

        $url = \Yii::$app->request->get('url');
        $file =\Yii::getAlias( '@frontend' ) . "/web".$url;
        try{
            $objReader = new \PHPExcel_Reader_Excel5();
            $objPHPExcel = $objReader->load($file);
        }
        catch (\Exception $exception){
            $objReader = new \PHPExcel_Reader_Excel2007();
            $objPHPExcel = $objReader->load($file);
        }
        $data =[];
        $count =  count($objPHPExcel->getAllSheets());
        for ($i = 0 ;$i<$count;$i++){
            $objWorksheet = $objPHPExcel->getSheet($i);
            $highestRow = $objWorksheet->getHighestRow();//最大行数，为数字
            $highestColumn = $objWorksheet->getHighestColumn();//最大列数 为字母
            $highestColumnIndex = \PHPExcel_Cell::columnIndexFromString($highestColumn); //将字母变为数字
            //  $objPHPExcel->getActiveSheet()->getStyle('E')->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_CURRENCY_EUR_SIMPLE);
            // $objPHPExcel->getActiveSheet()->getStyle('U')->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_CURRENCY_EUR_SIMPLE);
            $tableData = [];

            for($row = 2;$row<=$highestRow;$row++){
                for($col=0;$col< $highestColumnIndex;$col++){
                    $tableData[$row][$col] = $objWorksheet->getCellByColumnAndRow($col,$row)->getValue();
                }
            }
            $data []= $tableData;
            //读取数据完毕
            //return $tableData;
        }
        foreach ($data as $item){
            //return $item;
            foreach ($item as $val){
                try{
                    if (empty($val[0])){
                        continue;
                    }
                    $model = new Student();
                    $model->institude_name = $val[0];
                    $model->grades = (string)$val[1];
                    $model->student_class = $val[2];
                    $model->student_code = $val[3] ;
                    $model->student_name = $val[4];
                    $model->student_sex = $val[5] == Constants::$GENDER[Constants::GENDER_M] ? Constants::GENDER_M : Constants::GENDER_F;
                    $model->student_politicalstatus = $val[6] ? $val[6] :"暂无";
                    $model->student_nation = $val[7] ? $val[7] :"暂无";
                    $model->student_post = (string)$val[8] ? (string)$val[8] :"暂无";
                    $model->student_tel = (string)$val[9] ? (string)$val[9] : "暂无";
                    $model->student_cornet = (string)$val[10]? (string)$val[10] :"暂无";
                    $model->student_address = (string)$val[11];
                    $model->guardian_name = (string)$val[12];
                    $model->guardian_tel = (string)$val[13] ? (string)$val[13] :"暂无";
                    $model->idcard_num = $val[14] ? $val[14] :"暂无";
                    $model->remarks = null;
                    $model->creater_name = "系统导入";
                    $model->create_time = time();
                    $model->updater_name = "系统导入";
                    $model->update_time = time();
                    if (!$model->save()){
                        var_dump($model->getErrors());die();
                    }
                    unset($model);
                }
                catch (\Exception $exception){
                    throw $exception;
                }
            }
        }
        die();
        return $data;

        //开始插入数据
        foreach ($tableData as $goods)
        {
            //dd($goods);
            $order = Order::find()->where(['sn'=>$goods['0'],'status'=>Constants::ORDER_STATUS_PAID])->one();
            $express = ExpressBrand::find()->where(['name'=>$goods['1']])->one();
            if (empty($order) || empty($express)){
                unset($order);
                continue;
            }
            else{
                $order->express_id = $express->id;
                $order->express_no = (string) $goods['2'];
                $order->express_fee = $goods['3'] ? $goods['3'] : 0.01 ;
                if( $order->status == Constants::ORDER_STATUS_PAID && !empty( $order->express_id ) && !empty( $order->express_no ) && !empty( $order->express_fee ) ) {
                    OrderService::deliveredOrder($order, $order->express_id , $order->express_no, \Yii::$app->user->id);
                }
                else if( $order->save() ) {
                    OrderService::orderStatus( $order, null, \Yii::$app->user->id );
                }
                unset($order);
            }
        }
        unlink($file);
    }



}